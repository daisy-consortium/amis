;******
; Usage:
; makensis setup-amis3-langpack.nsi
;**

## the idea was to use only python vars, but in some cases, it was easier to copy them into NSIS vars
## because the python template compiler (cheetah) has an escape sequence ("\$var") that conflicts
## with path names
## so "a\b\$c" comes out as "a\b$c"
## and there's no elegant way around it
## so we have a few custom defines
;******
; custom defines
;**
!define LANGID "$langid"
!define PRODUCT_NAME "$product_name"
!define HELPFILE_NAME "$helpfile_name"
!define LANGNAME "$langname"

!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\AMIS.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

;******
; pages, components, and script includes
;**
; required for InstallLib
!include "Library.nsh"

; MUI 1.67 compatible ------
!include "MUI.nsh"

; Support for conditional logic (should be in c:\program files\nsis\include by default)
!include "LogicLib.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "\${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "\${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME

; License page
!insertmacro MUI_PAGE_LICENSE "lgpl.txt"

; Instfiles page
!insertmacro MUI_PAGE_INSTFILES

; Finish page
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "$nsis_language"

; MUI end ------


;******
; directory, installer exe name, etc
;**
Name "$product_name $product_version"
;this is the name of the installer that gets created.
OutFile "$build_dir\Setup-amis-langpack-\${LANGNAME}.exe"

;InstallDir "\$APPDATA\AMIS\settings"

ShowInstDetails show
ShowUnInstDetails show

;******
; copy all files, register DLLs, etc
;**
Section "MainSection" SEC01

  ;the settings dir will live here
	Var /GLOBAL SETTINGS_DIR

	;figure out the user's application data directory
	;look for the "all users" context
	SetShellVarContext all
	StrCpy \$SETTINGS_DIR \$APPDATA\AMIS\settings

  ;copy the langpack root files
  SetOutPath "\$SETTINGS_DIR\lang\\${LANGID}"
  File "$appdata_dir\AMIS\settings\lang\\${LANGID}\*"

  ;copy the langpack audio
  SetOutPath "\$SETTINGS_DIR\lang\\${LANGID}\audio"
  File "$appdata_dir\AMIS\settings\lang\\${LANGID}\audio\*"

  ;copy the langpack help book files (and images)
  SetOutPath "\$SETTINGS_DIR\lang\\${LANGID}\help"
  File "$appdata_dir\AMIS\settings\lang\\${LANGID}\help\*"
  SetOutPath "\$SETTINGS_DIR\lang\\${LANGID}\help\img"
  File /nonfatal "$appdata_dir\AMIS\settings\lang\\${LANGID}\help\img\*"
  ;copy the langpack shortcut book files
  SetOutPath "\$SETTINGS_DIR\lang\\${LANGID}\shortcuts"
  File "$appdata_dir\AMIS\settings\lang\\${LANGID}\shortcuts\*"

SectionEnd

;******
; Create shortcuts to the documentation (found in the language pack)
;*
Section -AdditionalIcons
  CreateShortCut "<%="$SMPROGRAMS\\AMIS\\"%>$text121 ($langname).lnk" "\$SETTINGS_DIR\lang\\${LANGID}\help\\${HELPFILE_NAME}"
  CreateShortCut "<%="$SMPROGRAMS\\AMIS\\"%>$text122 ($langname).lnk" "\$SETTINGS_DIR\lang\\${LANGID}\shortcuts\amiskeys.html"
SectionEnd

;******
; write unintaller and registry strings
; check if we need to install the msvc runtimes
;**
Section -Post
  WriteUninstaller "\$SETTINGS_DIR\lang\\${LANGID}\Uninstall-amis-langpack-\${LANGNAME}.exe"

SectionEnd

;******
;NSIS init function
;**
Function .onInit

	!insertmacro MUI_INSTALLOPTIONS_EXTRACT "..\filebrowse.ini"

		;show the splash screen
		File /oname=\$PLUGINSDIR\splash.bmp "$logo_dir\amis.bmp"
		splash::show 1000 \$PLUGINSDIR\splash

		; possible values for $0:
		; '1' if the user closed the splash screen early,
		; '0' if everything closed normally,
		; '-1' if some error occurred.
		Pop \$0

	SetShellVarContext all
	StrCpy \$SETTINGS_DIR \$APPDATA\AMIS\settings

	; make sure the target directory exists
	IfFileExists "\$SETTINGS_DIR" End Error

	Error:
		IfSilent +2
		MessageBox MB_ICONSTOP "$text201"
		Abort


 End:
FunctionEnd

;******
; uninstall init
;**
Function un.onInit
  IfSilent End
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "$text202" IDYES +2
  Abort
End:
FunctionEnd

;******
; uninstall complete
;**
Function un.onUninstSuccess
  HideWindow
  IfSilent End
  MessageBox MB_ICONINFORMATION|MB_OK "$text203"
End:
FunctionEnd


;******
;uninstall process
;**
Section Uninstall

	;figure out the user's application data directory
	;look for the "all users" context
	SetShellVarContext all
	StrCpy \$SETTINGS_DIR \$APPDATA\AMIS\settings

	Delete "<%="$SMPROGRAMS\\AMIS\\"%>$text121 ($langname).lnk"
  	Delete "<%="$SMPROGRAMS\\AMIS\\"%>$text122 ($langname).lnk"

	Delete "\$SETTINGS_DIR\lang\\${LANGID}\help\*"
	Delete "\$SETTINGS_DIR\lang\\${LANGID}\help\img\*"
	Delete "\$SETTINGS_DIR\lang\\${LANGID}\audio\*"

	RMDir "\$SETTINGS_DIR\lang\\${LANGID}\help\img"
	RMDir "\$SETTINGS_DIR\lang\\${LANGID}\help"
	RMDir "\$SETTINGS_DIR\lang\\${LANGID}\audio"

	Delete "\$SETTINGS_DIR\lang\\${LANGID}\shortcuts\*"
	RMDir "\$SETTINGS_DIR\lang\\${LANGID}\shortcuts"

	Delete "\$SETTINGS_DIR\lang\\${LANGID}\*"
	RMDir "\$SETTINGS_DIR\lang\\${LANGID}"

  SetAutoClose true
SectionEnd
